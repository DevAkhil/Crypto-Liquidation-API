// <auto-generated />
using CryptoLiquidations.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CryptoLiquidations.Migrations
{
    [DbContext(typeof(CryptoDbContext))]
    partial class CryptoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CryptoLiquidations.Models.HistoricalLiquidations", b =>
                {
                    b.Property<int>("HL_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HL_ID"));

                    b.Property<string>("HL_Pair")
                        .HasColumnType("text");

                    b.Property<string>("HL_PositionType")
                        .HasColumnType("text");

                    b.Property<string>("HL_Price")
                        .HasColumnType("text");

                    b.Property<string>("HL_QuantityInCrypto")
                        .HasColumnType("text");

                    b.Property<string>("HL_QuantityInDollars")
                        .HasColumnType("text");

                    b.Property<string>("HL_Site")
                        .HasColumnType("text");

                    b.Property<string>("HL_Time")
                        .HasColumnType("text");

                    b.HasKey("HL_ID");

                    b.ToTable("HistoricalLiquidations");
                });

            modelBuilder.Entity("CryptoLiquidations.Models.LiquidationData", b =>
                {
                    b.Property<int>("LD_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LD_ID"));

                    b.Property<string>("LD_12HrLiquidation")
                        .HasColumnType("text");

                    b.Property<string>("LD_1HrLiquidation")
                        .HasColumnType("text");

                    b.Property<string>("LD_24HrLiquidation")
                        .HasColumnType("text");

                    b.Property<string>("LD_4HrLiquidation")
                        .HasColumnType("text");

                    b.Property<string>("LD_LargestSingleLiquidation")
                        .HasColumnType("text");

                    b.Property<string>("LD_Time")
                        .HasColumnType("text");

                    b.Property<string>("LD_TotalLiquidations")
                        .HasColumnType("text");

                    b.HasKey("LD_ID");

                    b.ToTable("Liquidations");
                });

            modelBuilder.Entity("CryptoLiquidations.Models.LiquidationGraph", b =>
                {
                    b.Property<int>("LG_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LG_ID"));

                    b.Property<string>("LG_12HourGraph")
                        .HasColumnType("text");

                    b.Property<string>("LG_1HourGraph")
                        .HasColumnType("text");

                    b.Property<string>("LG_24HourGraph")
                        .HasColumnType("text");

                    b.Property<string>("LG_4HourGraph")
                        .HasColumnType("text");

                    b.Property<string>("LG_Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LG_ID");

                    b.ToTable("LiquidationGraphs");
                });

            modelBuilder.Entity("CryptoLiquidations.Models.SymbolLiquidationData", b =>
                {
                    b.Property<int>("SLD_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SLD_ID"));

                    b.Property<string>("SLD_LiquidationInCrypto")
                        .HasColumnType("text");

                    b.Property<string>("SLD_LiquidationInDollars")
                        .HasColumnType("text");

                    b.Property<string>("SLD_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SLD_ID");

                    b.ToTable("SymbolLiquidations");
                });
#pragma warning restore 612, 618
        }
    }
}
